import Field from './Field';
import Setting from './Setting';
import Pattern from './Pattern';
import IPatternStorage from './IPatternStorage';
export default class PatternVariant {
    getUse(): string;
    getStoryId(): string;
    getId(): string;
    getStorage(): IPatternStorage;
    getLabel(): string;
    getDescription(): string;
    getPattern(): Pattern;
    setPattern(pattern: Pattern): void;
    getVariant(): string;
    setVariant(value: string): void;
    getFields(): Field[];
    setConfiguration(configuration: any): void;
    getConfiguration(): any;
    addField(field: Field): void;
    getField(name: string): Field;
    setFields(fields: Field[]): void;
    getSettings(): Setting[];
    setSettings(value: Setting[]): void;
    getSetting(name: string): any;
    addSetting(setting: Setting): void;
    private handleFieldItem;
    private handleSubPreviewPattern;
    private buildPreviewPattern;
    getRenderInfo(): {};
    setRenderArgs(args: any): void;
    getRenderArgs(): any;
    beforeRender(handler: any): void;
    getVariables(includeFields?: boolean, includeSettings?: boolean): {};
    private pattern;
    private id;
    private use;
    private variant;
    private renderArgs;
    private beforeRenderHandler;
    private label;
    private description;
    private configuration;
    private fields;
    private settings;
    private cleanStorybookString;
    constructor(id: string, pattern: Pattern, variant: string, use: string, label: string, description: string, configuration: any);
}
