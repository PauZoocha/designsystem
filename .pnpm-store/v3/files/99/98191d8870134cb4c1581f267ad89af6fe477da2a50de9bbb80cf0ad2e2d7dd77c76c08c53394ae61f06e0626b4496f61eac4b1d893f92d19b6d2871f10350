"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TwingRenderer = void 0;

require("regenerator-runtime/runtime.js");

require("core-js/modules/es.object.to-string.js");

require("core-js/modules/es.promise.js");

require("core-js/modules/es.array.concat.js");

require("core-js/modules/es.array.for-each.js");

require("core-js/modules/web.dom-collections.for-each.js");

require("core-js/modules/es.object.keys.js");

require("core-js/modules/es.object.define-property.js");

var _twing = require("twing");

var _twigExtensions = require("./twigExtensions");

var _twigRenderEngine = require("./twigRenderEngine");

var _index = require("./index");

var _Pattern = _interopRequireDefault(require("./Pattern"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var _require = require('twing'),
    TwingEnvironment = _require.TwingEnvironment,
    TwingFunction = _require.TwingFunction,
    TwingFilter = _require.TwingFilter;

var twingFilters = require('twing-drupal-filters');

var TwingRenderer = /*#__PURE__*/function () {
  function TwingRenderer() {
    _classCallCheck(this, TwingRenderer);

    this.environment = void 0;
    this.initializeEnvironment = false;
    this.filters = {
      without: function without(arg1) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        return Promise.resolve(_twigExtensions.without.apply(void 0, [arg1].concat(args)));
      }
    };
    this.functions = {
      ws_itok: _twigExtensions.twigItok,
      uuid: _twigExtensions.twigUuid,
      file_url: _twigExtensions.twigFileUrl,
      pattern: _twigRenderEngine.renderPattern,
      create_attribute: _twigExtensions.twigAttributeFunction,
      pattern_configuration: _twigRenderEngine.getPatternConfiguration,
      pattern_preview: function pattern_preview(patternId) {
        var variables = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var variantId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _Pattern["default"].DEFAULT_VARIANT_NAME;
        return new Promise(function (resolve) {
          (0, _twigRenderEngine.renderPatternPreview)(patternId, variables, variantId).then(function (output) {
            resolve(output);
          });
        });
      }
    };
    var loader = new _twing.TwingLoaderArray(_index.storage.getTwigResources());
    this.environment = new TwingEnvironment(loader, {
      autoescape: false,
      debug: true
    });
  }

  _createClass(TwingRenderer, [{
    key: "addFilter",
    value: function addFilter(name, func) {
      this.filters[name] = func;
    }
  }, {
    key: "addFunction",
    value: function addFunction(name, func) {
      this.functions[name] = func;
    }
  }, {
    key: "getEnvironment",
    value: function getEnvironment() {
      return this.environment;
    }
  }, {
    key: "addTemplate",
    value: function addTemplate(path, template) {
      this.environment.getLoader().setTemplate(path, template);
    }
  }, {
    key: "setLoader",
    value: function setLoader(loader) {
      this.environment.setLoader(loader);
    }
  }, {
    key: "initialize",
    value: function initialize() {
      var _this = this;

      twingFilters(this.environment);
      Object.keys(this.functions).forEach(function (key) {
        _this.environment.addFunction(new TwingFunction(key, _this.functions[key]));
      });
      Object.keys(this.filters).forEach(function (key) {
        _this.environment.addFilter(new TwingFilter(key, _this.filters[key]));
      });
    }
  }, {
    key: "render",
    value: function () {
      var _render = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(id, include, variables) {
        return regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (this.initializeEnvironment === false) {
                  this.initializeEnvironment = true;
                  this.initialize();
                }

                return _context.abrupt("return", this.environment.render(include, variables));

              case 2:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function render(_x, _x2, _x3) {
        return _render.apply(this, arguments);
      }

      return render;
    }()
  }]);

  return TwingRenderer;
}();

exports.TwingRenderer = TwingRenderer;