"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

require("core-js/modules/es.promise.js");

var _core = require("@wingsuit-designsystem/core");

var _version = _interopRequireDefault(require("./version"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const inquirer = require('inquirer');

const {
  spawn
} = require('child_process');

const logger = console;

function _default(options, environment) {
  const getAppName = async () => {
    if (options.args.length > 0) {
      return Promise.resolve(options.args[0]);
    }

    const result = await inquirer.prompt([{
      type: 'list',
      message: 'Choose your app',
      choices: (0, _core.getAppNames)(),
      name: `appName`
    }]);
    return result.appName;
  };

  const startApp = async () => {
    const appName = await getAppName();
    const {
      outputDir,
      docs
    } = options;

    try {
      const appConfig = (0, _core.resolveConfig)(appName, environment);
      const consoleCommand = (docs !== true ? appConfig.startup() : `export STORYBOOK_DOCS=true && ${appConfig.startup()} --docs`) + (outputDir && outputDir !== '' ? ` --output-dir ${outputDir}` : '');
      (0, _version.default)({});
      logger.info('');
      logger.info(`Starting Wingsuit app "${appName}"...`);
      logger.info('');
      const command = spawn(consoleCommand, [], {
        shell: true,
        stdio: 'inherit'
      });
      command.on('close', code => {
        logger.log(`${code}`);
      });
    } catch (e) {
      logger.error(e);
    }
  };

  startApp();
}