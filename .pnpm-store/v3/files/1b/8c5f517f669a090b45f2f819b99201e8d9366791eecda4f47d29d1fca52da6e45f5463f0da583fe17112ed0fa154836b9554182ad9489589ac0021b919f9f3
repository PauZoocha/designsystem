import PatternVariant from './PatternVariant';
import { IPatternDefinition } from './definition';
import IPatternStorage from './IPatternStorage';
export default class Pattern {
    static DEFAULT_VARIANT_NAME: string;
    getUse(): string;
    getLabel(): string;
    getIconPath(): string;
    setIconPath(iconPath: any): void;
    getNamespace(): string;
    setNamespace(namespace: any): void;
    getDescription(): string;
    getId(): string;
    getDefaultVariant(): PatternVariant;
    private id;
    private label;
    private description;
    private iconPath;
    private namespace;
    private parameters;
    private use;
    private visible;
    private definition;
    private patternVariants;
    private defaultVariant;
    private storage;
    isVisible(app: any): boolean;
    constructor(id: string, definition: IPatternDefinition, storage: IPatternStorage);
    getPatternVariants(): PatternVariant[];
    getVariant(id?: string): any;
    getParameters(): any;
    getStorage(): IPatternStorage;
    private initializeVariants;
}
