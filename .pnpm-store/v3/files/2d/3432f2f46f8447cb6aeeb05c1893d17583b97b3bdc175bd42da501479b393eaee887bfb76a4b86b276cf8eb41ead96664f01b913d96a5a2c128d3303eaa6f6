"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.name = name;
exports.webpack = webpack;

require("core-js/modules/es.regexp.exec.js");

require("core-js/modules/es.string.replace.js");

var _path = _interopRequireDefault(require("path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var glob = require('glob');

function name(appConfig) {
  return 'drupal';
}

function webpack(appConfig) {
  var behaviorItems = glob.sync(`${appConfig.absDesignSystemPath}/**/*.behavior.js`);
  var behaviorObject = behaviorItems.reduce(function (acc, item) {
    var filename = _path.default.basename(item).replace('.behavior.js', '');

    acc[`behaviors/${filename}`] = item;
    return acc;
  }, {});
  var vendorItems = glob.sync(`${appConfig.absDesignSystemPath}/**/*.vendor.js`);
  var vendorObject = vendorItems.reduce(function (acc, item) {
    var filename = _path.default.basename(item).replace('.vendor.js', '');

    acc[`vendors/${filename}`] = item;
    return acc;
  }, {});
  var cssItems = glob.sync(`${appConfig.absDesignSystemPath}/**/*.css`);
  var cssObject = cssItems.reduce(function (acc, item) {
    var filename = _path.default.basename(item).replace('.css', '');

    acc[`${filename}`] = item;
    return acc;
  }, {});
  return {
    target: 'web',
    devtool: appConfig.environment === 'development' ? 'cheap-source-map' : 'source-map',
    entry: _objectSpread(_objectSpread(_objectSpread({}, behaviorObject), cssObject), vendorObject),
    module: {
      rules: [{
        test: /\.(yml|md|yaml)$/,
        loader: 'file-loader',
        options: {
          name: '[name].[ext]',
          outputPath: 'wingsuit',
          emit: true
        }
      }, {
        test: /\.twig$/,
        loader: 'file-loader',
        options: {
          name: '[path][name].[ext]',
          outputPath: appConfig.assetAtomicFolder,
          context: appConfig.absDesignSystemPath,
          emit: true
        }
      }]
    }
  };
}