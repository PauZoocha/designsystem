"use strict";

require("core-js/modules/es.object.define-property.js");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultAppConfig = defaultAppConfig;

require("core-js/modules/es.array.join.js");

require("core-js/modules/es.array.concat.js");

var _path = _interopRequireDefault(require("path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function defaultAppConfig(type, absRootPath) {
  return {
    type: type,
    name: type,
    distFolder: "dist/app-".concat(type),
    dataFolder: 'apps/data',
    namespaces: {
      wsdesignsystem: _path["default"].join(absRootPath, 'source/default'),
      wspatterns: _path["default"].join(absRootPath, 'source/default/patterns')
    },
    cssMode: 'extract',
    designSystem: 'default',
    assetBundleFolder: '',
    patternFolder: 'patterns',
    assetAtomicFolder: 'atomic',
    absDesignSystemPath: _path["default"].join(absRootPath, 'source/default'),
    absDistFolder: _path["default"].join(absRootPath, "dist/app-".concat(type)),
    absAppPath: _path["default"].join(absRootPath, "apps/".concat(type)),
    absDataPath: _path["default"].join(absRootPath, "apps/data"),
    absPatternPath: _path["default"].join(absRootPath, "'source/default/patterns"),
    features: {},
    absRootPath: absRootPath,
    environment: 'development',
    path: "./apps/".concat(type),
    componentTypes: {
      wingsuit: 'Wingsuit component (UI Pattern)'
    },
    startup: function startup() {
      return "cross-env-shell NODE_ENV=".concat(this.environment, " \"webpack --watch --config ").concat(this.path, "/webpack.config.js\"");
    },
    webpack: function webpack(appConfig, config) {
      return {};
    },
    webpackFinal: function webpackFinal(appConfig, config) {
      return config;
    },
    getParameters: function getParameters() {
      return {};
    },
    presets: [],
    postCssConfig: {
      options: {
        postcssOptions: {
          plugins: []
        },
        sourceMap: true
      }
    }
  };
}