@use "../tokens" as *;
@use "../functions" as *;
@import "../mixins";

.ilo--accordion {
  $transition-timing: 500ms;
  $scroll-max-height: 300px;

  &--button {
    display: flex;
    align-items: center;
    flex-direction: row;
    justify-content: space-between;

    width: 100%;
    margin: 0;
    padding: px-to-rem(calc($spacing-ui-padding-lg - 6px)) px-to-rem(36px)
      px-to-rem(calc($spacing-ui-padding-lg - 6px)) 0;

    background-color: $color-ux-background-default;
    background-position: calc(100% - px-to-rem(6px)) center;
    background-repeat: no-repeat;
    background-size: px-to-rem(24px) px-to-rem(24px);

    border: none;
    border-top: 2px solid map-get($color, "accordion", "border");

    fill: $color-ux-labels-actionable;
    font-family: $fonts-display;
    color: $color-ux-labels-actionable;
    font-weight: map-get($type, "weights", "section");
    @include font-styles("label-medium");

    transition: all $transition-timing ease-in-out;
    @include dataurlicon("add", $color-ux-labels-actionable);

    &--large {
      @include font-styles("headline-6");
      padding: px-to-rem(calc($spacing-ui-padding-lg - 3px)) px-to-rem(36px)
        px-to-rem(calc($spacing-ui-padding-lg - 3px)) 0;
    }

    &:hover,
    &:focus {
      background-color: $color-ux-background-hover;
      border-top-color: $color-ux-borders-hover;
      color: $color-ux-labels-hover;
      cursor: pointer;
      fill: $color-ux-labels-hover;

      &[aria-expanded="true"] {
        @include dataurlicon("minus", $color-ux-labels-hover);
      }

      &[aria-expanded="false"] {
        @include dataurlicon("add", $color-ux-labels-hover);
      }
    }

    @include breakpoint("medium") {
      @include font-styles("label-medium");
      padding: px-to-rem(calc($spacing-ui-padding-xl - 14px)) px-to-rem(36px)
        px-to-rem(calc($spacing-ui-padding-xl - 14px)) 0;

      &--large {
        @include font-styles("headline-6");
        padding: px-to-rem(calc($spacing-ui-padding-lg - 3px)) px-to-rem(36px)
          px-to-rem(calc($spacing-ui-padding-lg - 3px)) 0;
      }
    }

    &[aria-expanded="true"] {
      @include dataurlicon("minus", $color-ux-labels-actionable);
    }

    &[aria-expanded="false"] {
      @include dataurlicon("add", $color-ux-labels-actionable);
    }
  }

  &--panel {
    $panel: &;

    max-height: 0;
    transition: all $transition-timing cubic-bezier(0, 1, 0, 1);
    overflow: hidden;

    .ilo--accordion--innerpanel {
      padding-bottom: px-to-rem($spacing-ui-padding-sm);
      padding-top: px-to-rem(8px);
    }

    &--open {
      max-height: 100vh;
      transition: all $transition-timing ease-in-out;

      &#{$panel}__scroll {
        max-height: $scroll-max-height;
        overflow-y: auto;
        padding-right: px-to-rem($spacing-ui-padding-xl);
      }
    }
  }
}
