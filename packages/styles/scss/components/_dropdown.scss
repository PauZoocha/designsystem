@use "../tokens" as *;
@use "../functions" as *;
@import "../mixins";

.ilo--dropdown {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background-color: map-get(
    $color,
    "formelements",
    "input",
    "default",
    "background"
  );
  @include bordervalues("input", "formelements");
  border-radius: 0;
  box-sizing: content-box;
  font-family: $fonts-display;
  font-weight: map-get($type, "weights", "section");
  @include font-styles("label-medium");
  height: px-to-rem(
    map-get($spacing, "formelements", "input", "default", "height")
  );
  @include spacingvalues("margin", "input", "formelements");
  outline: none;
  overflow: hidden;
  padding-left: 16px;
  padding-right: 56px;
  padding-bottom: 0;
  padding-top: 0;
  text-overflow: ellipsis;
  white-space: nowrap;
  width: calc(100% - 78px);

  background-position: calc(100% - 14px) center;
  background-repeat: no-repeat;
  background-size: 24px 24px, 72px 100%;
  background-image: url("#{colortodataurlicon("arrow", $color-ux-labels-actionable)}"),
    linear-gradient(
      to right,
      transparent 0%,
      transparent calc(50% - 0.81px),
      $color-formelements-input-default-border-left calc(50% - 0.8px),
      $color-formelements-input-default-border-left calc(50% + 0.8px),
      transparent calc(50% + 0.81px),
      transparent 100%
    );

  option {
    width: calc(100% - 48px);
    text-overflow: ellipsis;
    overflow: hidden;
  }

  &:hover {
    background-color: map-get(
      $color,
      "formelements",
      "input",
      "hover",
      "background"
    );
    @include bordervalues("input", "formelements", "hover");
    background-image: url("#{colortodataurlicon("arrow", $color-ux-labels-hover)}"),
      linear-gradient(
        to right,
        transparent 0%,
        transparent calc(50% - 0.81px),
        $color-formelements-input-default-border-left calc(50% - 0.8px),
        $color-formelements-input-default-border-left calc(50% + 0.8px),
        transparent calc(50% + 0.81px),
        transparent 100%
      );
  }

  &:focus {
    background-color: map-get(
      $color,
      "formelements",
      "input",
      "focus",
      "background"
    );
    @include bordervalues("input", "formelements", "focus");
    background-image: url("#{colortodataurlicon("arrow", $color-ux-labels-hover)}"),
      linear-gradient(
        to right,
        transparent 0%,
        transparent calc(50% - 0.81px),
        $color-formelements-input-default-border-left calc(50% - 0.8px),
        $color-formelements-input-default-border-left calc(50% + 0.8px),
        transparent calc(50% + 0.81px),
        transparent 100%
      );
  }

  &:disabled {
    opacity: 45%;
    pointer-events: none;
  }

  &:invalid,
  &.error,
  .error & {
    background-color: map-get(
      $color,
      "formelements",
      "input",
      "error",
      "background"
    );
    @include bordervalues("input", "formelements", "error");
  }
}
